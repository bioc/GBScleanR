% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Methods-GbsrGenotypeData.R,
%   R/Methods-GbsrScheme.R
\name{showScheme}
\alias{showScheme}
\alias{showScheme,GbsrGenotypeData-method}
\alias{showScheme,GbsrScheme-method}
\title{Show the information stored in a GbsrScheme object}
\usage{
showScheme(object, ...)

\S4method{showScheme}{GbsrGenotypeData}(object)

\S4method{showScheme}{GbsrScheme}(object, parents_name)
}
\arguments{
\item{object}{A GbsrGenotypeData object.}

\item{...}{Unused.}

\item{parents_name}{A vector of strings to indicate names of parental samples.}
}
\description{
Print the information of each generation in a GbsrScheme object in the scheme
slot of a GbsrGenotypeData object.
A GbsrScheme object stores information of a population size, mating combinations and
a type of cross applied to each generation of the breeding process
to generate the population which you are going to subject to the "clean" function.
}
\examples{
\dontrun{
gds <- loadGDS("/path/to/GDS.gds")
gds <- setParents(gds, parents = paste("parent", 1:8, sep = ""))
# setParents set member ID 1 to 8 to parent1 to parent8, respectively.
# If you made crosses of parent1 x parent2, parent3 x parent4, 
# parent5 x parent6, and parent7 x parent8, run the following.
gds <- initScheme(gds, crosstype = "pair", mating = matrix(1:8, nrow = 4, ncol = 2))

# Now the progenies of the crosses above have member ID 9, 10, 11,
# and 12 for each combination of mating. You can check IDs with showScheme().
showScheme(gds)
}

}
\seealso{
[initScheme()] and [addScheme()]
}
