% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Methods-GbsrGenotypeData.R,
%   R/Methods-GbsrScheme.R
\name{showScheme}
\alias{showScheme}
\alias{showScheme,GbsrGenotypeData-method}
\alias{showScheme,GbsrScheme-method}
\title{Show the information stored in a GbsrScheme object}
\usage{
showScheme(object, ...)

\S4method{showScheme}{GbsrGenotypeData}(object)

\S4method{showScheme}{GbsrScheme}(object, parents_name)
}
\arguments{
\item{object}{A GbsrGenotypeData object.}

\item{...}{Unused.}

\item{parents_name}{A vector of strings to indicate names of parental samples.}
}
\description{
Print the information of each generation in a GbsrScheme object in the scheme
slot of a GbsrGenotypeData object.
A GbsrScheme object stores information of a population size, mating combinations and
a type of cross applied to each generation of the breeding process
to generate the population which you are going to subject to the \code{estGeno()} function.
}
\examples{
gds_fn <- system.file("extdata", "simpop.gds", package = "GBScleanR")
gdata <- loadGDS(gds_fn)

gdata <- setParents(gdata, parents = c("Founder1", "Founder2"))
gdata <- initScheme(gdata, crosstype = "pair", mating = cbind(c(1:2)))
gdata <- addScheme(gdata, crosstype = "self")
showScheme(gdata)

}
\seealso{
\code{\link[=initScheme]{initScheme()}} and \code{\link[=addScheme]{addScheme()}}
}
