% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Methods-GbsrGenotypeData.R
\name{getFlipped}
\alias{getFlipped}
\alias{getFlipped,GbsrGenotypeData-method}
\title{Get a logical vector indicating flipped SNP markers.}
\usage{
getFlipped(object, valid = TRUE, chr = NULL, ...)

\S4method{getFlipped}{GbsrGenotypeData}(object, valid, chr)

\S4method{getFlipped}{GbsrGenotypeData}(object, valid, chr)
}
\arguments{
\item{object}{A \link{GbsrGenotypeData} object.}

\item{valid}{A logical value to specify flip alleles
only of valid markers. see also\code{\link[=setSnpFilter]{setSnpFilter()}}.}

\item{chr}{A index to spefcify chromosome to get information.}

\item{...}{Unused.}
}
\value{
A logical vector indicating which markers of alleles were flipped.
}
\description{
Get a logical vector indicating flipped SNP markers.
}
\details{
Flipped markers are markers where the alleles expected as
reference allele are called as alternative allele. If you
specify two parents in the \code{parents} argument of \code{\link[=setParents]{setParents()}}
with \code{flip = TRUE}, \code{bi = TRUE}, and \code{homo = TRUE}, the alleles found
in the parent specified as the first element to the \code{parents}
argument are supposed as reference alleles of the markers.
If the "expected" reference alleles are not actually
called as reference alleles but alternative alleles
in the given data. \code{\link[=setParents]{setParents()}} will automatically labels
those markers "flipped". The SnpAnnotatoinDataFrame slot sores this
information and accessible via \code{\link[=getFlipped]{getFlipped()}} which gives you
a logical vector indicating which markers are labeled as flipped
\code{TRUE} or not flipped \code{FALSE}. \code{\link[=hasFlipped]{hasFlipped()}} just tells you
whether the SnpAnnotatoinDataFrame slot has the information of
flipped markers or not.
}
\examples{
# Load data in the GDS file and instantiate a [GbsrGenotypeData] object.
gds_fn <- system.file("extdata", "sample.gds", package = "GBScleanR")
gds <- loadGDS(gds_fn)

# Find the IDs of parental samples.
parents <- grep("Founder", getScanID(gds), value = TRUE)

# Set the parents and flip allele information
# if the reference sample (Founder1 in our case) has homozygous
# alternative genotype at some markers of which alleles will
# be swapped to make the reference sample have homozygous
# reference genotype.
gds <- setParents(gds, parents = parents, flip = TRUE)

getFlipped(gds)

# Close the connection to the GDS file.
closeGDS(gds)

}
\seealso{
\code{\link[=setParents]{setParents()}} and \code{\link[=hasFlipped]{hasFlipped()}}.
}
