% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Methods-GbsrGenotypeData.R
\name{gbsrGDS2VCF}
\alias{gbsrGDS2VCF}
\alias{gbsrGDS2VCF,GbsrGenotypeData-method}
\title{Write a VCF file based on data in a GDS file}
\usage{
gbsrGDS2VCF(
  object,
  out_fn,
  node = "raw",
  valid = TRUE,
  out_fmt = NULL,
  out_info = NULL,
  ...
)

\S4method{gbsrGDS2VCF}{GbsrGenotypeData}(object, out_fn, node, valid, out_fmt, out_info)
}
\arguments{
\item{object}{A GbsrGenotypeData object.}

\item{out_fn}{A string to specify the path to an output VCF file.}

\item{node}{Either one of "raw", "filt", and "cor" to output raw
genotype data, filtered genotype data, or corrected genotype data,
respectively.}

\item{valid}{A logical value to specify whether to output valid markers
and samples only or all.}

\item{out_fmt}{A character vector to specify which variables in
the annotation/format node should be output.}

\item{out_info}{A character vector to specify which variables in
the annotation/info node should be output.}

\item{...}{Unused.}
}
\value{
Create a VCF file at location specified by out_fn.
The connection to the GDS file in the input GbsrGenotypeData object will be automatically closed.
}
\description{
Write out a VCF file with raw, filtered, or corrected genotype data
stored in a GDS file. The output VCF file contains only the GT filed,
while other annotations, AD, DP and other information will be omitted.
}
\examples{
gds_fn <- system.file("extdata", "sample.gds", package = "GBScleanR")
out_fn <- system.file("extdata", "sample_out.vcf", package = "GBScleanR")
gdata <- loadGDS(gds_fn)
gbsrGDS2VCF(gdata, out_fn)
# gbsrGDS2VCF() closes the connection to the GDS file of the gdata object.

}
