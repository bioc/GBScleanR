% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Methods-GbsrGenotypeData.R
\name{getCountAlleleRef}
\alias{getCountAlleleRef}
\alias{getCountAlleleRef,GbsrGenotypeData-method}
\title{Obtain total reference allele counts per SNP or per scan (sample)}
\usage{
getCountAlleleRef(object, target = "snp", valid = TRUE, prop = FALSE, ...)

\S4method{getCountAlleleRef}{GbsrGenotypeData}(object, target = "snp", valid = TRUE, prop = FALSE)
}
\arguments{
\item{object}{A \link{GbsrGenotypeData} object.}

\item{target}{Either of "snp" and "scan".}

\item{valid}{A logical value. See details.}

\item{prop}{A logical value whether to return values as proportions
of total reference allele counts to total non missing allele counts or not.}

\item{...}{Unused.}
}
\value{
A numeric vector of (proportion of) reference alleles per marker.
}
\description{
Obtain total reference allele counts per SNP or per scan (sample)
}
\details{
You need to execute \code{\link[=countGenotype]{countGenotype()}} to calculate sumaary statisticsto be
obtained via this function.
If \code{valid = TRUE}, the chromosome information of markers which are
labeled \code{TRUE} in the \link{ScanAnnotationDataFrame} slot will be returned.
\code{\link[=getValidSnp]{getValidSnp()}} tells you which samples are valid.
}
\examples{
# Load data in the GDS file and instantiate a [GbsrGenotypeData] object.
gds_fn <- system.file("extdata", "sample.gds", package = "GBScleanR")
gdata <- loadGDS(gds_fn)

# Summarize the genotype count information and store them in the
# [SnpAnnotationDataFrame] and [ScanAnnotationDataFrame] objects 
# linked at the slots of the [GbsrGenotypeData] object.
gdata <- countGenotype(gdata)

getCountAlleleRef(gdata)

# Close the connection to the GDS file.
closeGDS(gdata)

}
