% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Methods-GbsrGenotypeData.R
\name{swapAlleles}
\alias{swapAlleles}
\alias{swapAlleles,GbsrGenotypeData-method}
\title{Swap the alleles recorded in a GDS file linked to the given GbsrGenotypeData object.}
\usage{
swapAlleles(object, allele, ...)

\S4method{swapAlleles}{GbsrGenotypeData}(object, allele)
}
\arguments{
\item{object}{A GbsrGenotypeData object.}

\item{allele}{A vector or matrix of characters each of which is either of "A", "T", "G", and "C". The length and the number of rows should be same with the number of "valid" markers. See details.}

\item{...}{Unused.}
}
\value{
A GbsrGenotypeData object.
}
\description{
The alleles of each marker are automatically obtained to match with those
recorded in an input VCF file when it was converted to a GDS file. This function swap
those alleles.
}
\details{
The `allele` argument can take a vector or a two-column matrix of characters
indicating reference alleles or both alleles. If A vector was given, this
function check the current reference and alternative allele of each marker is
same with the specified allele for each marker in the vector.
If a marker showed that the current alternative allele matched with the allele
in the vector, the reference allele and the alternative allele will be swapped
each other. In the case of a matrix, the alleles specified in the first column are
supposed to be reference alleles while the second column is for alternative alleles.
This function compares both alleles between the current record and the specified in
the matrix. If a marker showed one of the alleles specified in the allele matrix
do not exist in the current allele of the marker, this marker will be labeled as "invalid"
marker. In the case of that both of the specified alleles exist but swapped
in the current record, the current alleles will be swapped to match with those specified in
the allele matrix.
}
\examples{
\dontrun{
# In the case of that you have a reference genome data but it was not used 
# for the SNP call, or reference alleles in the genotype data do not match 
# with the alleles in the reference genome, e.g. TASSEL-GBS do.
gds <- loadGDS("/path/to/GDS.gds")
ref_genome <- Biostrings::readDNAStringSet("/path/to/genome.fasta")
chr_names <- getChromosome(object, name = TRUE)
snp_pos <- GenomicRanges::GRanges(seqnames = chr_names,
                                  ranges = IRanges::IRanges(start = getPosition(object),
                                                            width = 1))
ref_allele <- as.character(genome[snp_pos])
gds <- swapAlleles(gds, allele = ref_allele)
}

}
